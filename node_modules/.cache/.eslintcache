[{"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/index.js":"1","/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx":"2","/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Rule.jsx":"3","/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Normal.jsx":"4","/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Hard.jsx":"5","/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Welcome.jsx":"6","/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Keyboard.jsx":"7","/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GuessBoard.jsx":"8","/Users/jiawenhe/Desktop/project/wordle/src/index.js":"9","/Users/jiawenhe/Desktop/project/wordle/src/GameProvider.jsx":"10","/Users/jiawenhe/Desktop/project/wordle/src/Welcome.jsx":"11","/Users/jiawenhe/Desktop/project/wordle/src/Normal.jsx":"12","/Users/jiawenhe/Desktop/project/wordle/src/Hard.jsx":"13","/Users/jiawenhe/Desktop/project/wordle/src/Rule.jsx":"14","/Users/jiawenhe/Desktop/project/wordle/src/Keyboard.jsx":"15","/Users/jiawenhe/Desktop/project/wordle/src/GuessBoard.jsx":"16","/Users/jiawenhe/Desktop/project/wordle/src/WordList.js":"17"},{"size":788,"mtime":1668754544052,"results":"18","hashOfConfig":"19"},{"size":3321,"mtime":1668815340510,"results":"20","hashOfConfig":"19"},{"size":1801,"mtime":1668719603517,"results":"21","hashOfConfig":"19"},{"size":5600,"mtime":1668768097681,"results":"22","hashOfConfig":"19"},{"size":5327,"mtime":1668812126479,"results":"23","hashOfConfig":"19"},{"size":4523,"mtime":1668803207618,"results":"24","hashOfConfig":"19"},{"size":7133,"mtime":1668769280057,"results":"25","hashOfConfig":"19"},{"size":2393,"mtime":1668767410737,"results":"26","hashOfConfig":"19"},{"size":788,"mtime":1668754544052,"results":"27","hashOfConfig":"28"},{"size":3066,"mtime":1668836065051,"results":"29","hashOfConfig":"28"},{"size":4523,"mtime":1668803207618,"results":"30","hashOfConfig":"28"},{"size":5600,"mtime":1668768097681,"results":"31","hashOfConfig":"28"},{"size":5327,"mtime":1668812126479,"results":"32","hashOfConfig":"28"},{"size":1801,"mtime":1668719603517,"results":"33","hashOfConfig":"28"},{"size":7153,"mtime":1668833036430,"results":"34","hashOfConfig":"28"},{"size":2393,"mtime":1668767410737,"results":"35","hashOfConfig":"28"},{"size":24712,"mtime":1668835663435,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gbosba",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1he7xmi",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/index.js",[],[],"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx",["93"],[],"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Rule.jsx",["94","95","96"],[],"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Normal.jsx",["97"],[],"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Hard.jsx",["98","99"],[],"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Welcome.jsx",[],[],"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Keyboard.jsx",["100","101"],[],"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GuessBoard.jsx",["102","103","104","105"],[],"/Users/jiawenhe/Desktop/project/wordle/src/index.js",[],[],[],"/Users/jiawenhe/Desktop/project/wordle/src/GameProvider.jsx",[],[],"/Users/jiawenhe/Desktop/project/wordle/src/Welcome.jsx",[],[],"/Users/jiawenhe/Desktop/project/wordle/src/Normal.jsx",["106"],[],"import { React, useContext, useState, useEffect } from 'react';\nimport './game.css';\nimport { useNavigate } from 'react-router-dom';\nimport { gameContext } from './GameProvider';\nimport './modal.css';\nimport Keyboard from './Keyboard';\nimport GuessBoard from './GuessBoard';\n\n\nexport default function Normal(props) {\n  const navigate = useNavigate();\n  const context = useContext(gameContext);\n\n  let dispatch = context.dispatch;\n  let game_state = context.game_state;\n  let ACTION = context.ACTION;\n\n\n  useEffect(()=>{\n      const DATA = window.localStorage.getItem('APP_LEFT_STATE');\n      \n      if(DATA !== null){\n        let tmp = JSON.parse(DATA);\n        if(tmp.guessed_list.length === 0 && tmp.temp_guess === \"\"){\n          localStorage.removeItem(\"APP_LEFT_STATE\")\n        }else{\n          setModal_resume(!modal_resume);\n        }\n      }\n  },[])\n\n\n  window.onbeforeunload = ()=>{\n    // if leave or refresh save state;\n    // normal leave should not save state;\n    // after load the state, delete it!\n    window.localStorage.setItem(\"APP_LEFT_STATE\", JSON.stringify(game_state));\n  }\n\n  function goback() {\n    setModal_back(!modal_back);\n    dispatch({type: ACTION.RESET})\n    localStorage.removeItem(\"APP_LEFT_STATE\")\n    navigate('/');\n  }\n\n  function back_save(){\n    setModal_back(!modal_back);\n    localStorage.removeItem(\"APP_LEFT_STATE\")\n    navigate('/');\n  }\n\n  function onClick_rule() {\n    navigate('/rules');\n  }\n\n//   useEffect(() => {\n//     const keys = document.querySelectorAll('.key:not(.delete,.enter)');\n//     // keys.forEach((key) => {\n//     //   key.addEventListener('click', onClick_key);\n//     // });\n//     const enter = document.querySelector('.enter');\n//     enter.addEventListener('click', onClick_enter);\n//     const del = document.querySelector('.delete');\n//     del.addEventListener('click', onClick_delete);\n\n//     console.log('key are attached!');\n//     return () => {\n//       keys.forEach((key) => {\n//         key.removeEventListener('click', onClick_key);\n//       });\n//       enter.removeEventListener('click', onClick_enter);\n//       del.removeEventListener('click', onClick_delete);\n//       console.log('unmounts!!');\n//     };\n//   }, [guess]); \n\n// //   useEffect(() => {\n// //     console.log(\"guess changed!\")\n// //   },[guess]);\n\n//   useEffect(() => {\n//     let space = document.querySelector('.guess_row_normal:not(.used)');\n//     space.classList.add('using');\n//     console.log('next row is fetched');\n//   }, [guessed_list]);\n\n\n  const [modal, setModal] = useState(false);\n  const [modal_back, setModal_back] = useState(false);\n  const [modal_resume, setModal_resume] = useState(false);\n\n  function onClick_resueme(){\n    setModal_resume(!modal_resume);\n    const tmp = JSON.parse(window.localStorage.getItem('APP_LEFT_STATE'));\n    localStorage.removeItem('APP_LEFT_STATE');\n    let path = (tmp.isHard) ? \"/game/hard\" : \"/game/normal\";\n    dispatch({type: ACTION.RESUME, payload: tmp});\n    navigate(path);\n  }\n\n  function onClick_resueme_close(){\n    setModal_resume(!modal_resume);\n    // let path = (game_state.isHard) ? \"/game/hard\" : \"/game/normal\";\n    // navigate(path);\n  }\n\n    \n  function onClick_unable_change() {\n    setModal(!modal);\n  }\n\n  function onClick_back(){\n    setModal_back(!modal_back);\n  }\n\n  return (\n    <>\n      <header className=\"navbar\">\n        <button className=\"button\" onClick={onClick_back}>\n          Back\n        </button>\n        <div className=\"longer\">\n          <button className=\"button\" onClick={onClick_rule}>\n            Rule\n          </button>\n        </div>\n        <div className=\"mode_title\">Hard mode:</div>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            onClick={onClick_unable_change}\n            checked={game_state.isHard}\n            readOnly\n          ></input>\n          <span className=\"slider round\"></span>\n        </label>\n      </header>\n\n      {modal_back && (\n        <div className=\"modal\">\n          <div onClick={onClick_back} className=\"overlay\"></div>\n          <div className=\"modal-content\">\n            <h3>Are you sure you want to leave?</h3>\n            \n            <button className=\"exit-modal\" onClick={goback}>\n              Yes\n            </button>\n            <button className=\"mid-modal\" onClick={back_save}>\n              leave, but save\n            </button>\n            <button className=\"again-modal\" onClick={onClick_back}>\n              Resume\n            </button>\n          </div>\n        </div>\n      )}\n\n      {modal_resume && (\n            <div className=\"modal\">\n                <div className=\"overlay\"></div>\n                <div className=\"modal-content\">\n                <h3>You have a lefte game, wish to Continue?</h3>\n                <button className=\"exit-modal\" onClick={onClick_resueme}>\n                    Yes\n                </button>\n                <button className=\"again-modal\" onClick={onClick_resueme_close}>\n                    No\n                </button>\n                </div>\n            </div>\n          )}\n      \n\n      {modal && (\n        <div className=\"modal\">\n          <div onClick={onClick_unable_change} className=\"overlay\"></div>\n          <div className=\"modal-content\">\n            <h2>Hello Wordler!</h2>\n            <p>You can only change the level before game start!</p>\n            <button className=\"close-modal\" onClick={onClick_unable_change}>\n              CLOSE\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"game_layout\">\n        <GuessBoard />\n        <Keyboard />\n      </div>\n    </>\n  );\n}\n","/Users/jiawenhe/Desktop/project/wordle/src/Hard.jsx",["107","108"],[],"import { React, useContext, useState } from 'react';\nimport './game.css';\nimport { useNavigate } from 'react-router-dom';\nimport { gameContext } from './GameProvider';\nimport './modal.css';\nimport Keyboard from './Keyboard';\nimport GuessBoard from './GuessBoard';\nimport { useEffect } from 'react';\n\n\nexport default function Hard(props) {\n    const navigate = useNavigate();\n    const context = useContext(gameContext);\n  \n    let dispatch = context.dispatch;\n    let game_state = context.game_state;\n    let ACTION = context.ACTION;\n\n\n\n    // useEffect logic order:\n        // navigate function, to leave the page\n        // render all the component from outside thru\n        // landing to welcome page\n        // unmounting! (useEffect!)\n    function goback() {\n        setModal_back(!modal_back);\n        dispatch({type: ACTION.RESET})\n        navigate('/');\n        localStorage.removeItem(\"APP_LEFT_STATE\");\n    }\n\n    function back_save(){\n        setModal_back(!modal_back);\n        navigate('/');\n        localStorage.removeItem(\"APP_LEFT_STATE\");\n    }\n\n    function onClick_rule() {\n        navigate('/rules');\n    }\n\n    const [modal, setModal] = useState(false);\n    const [modal_back, setModal_back] = useState(false);\n    const [modal_resume, setModal_resume] = useState(false);\n\n    function onClick_resueme(){\n        setModal_resume(!modal_resume);\n        const tmp = JSON.parse(window.localStorage.getItem('APP_LEFT_STATE'));\n        localStorage.removeItem('APP_LEFT_STATE');\n        let path = (tmp.isHard) ? \"/game/hard\" : \"/game/normal\";\n        dispatch({type: ACTION.RESUME, payload: tmp});\n        navigate(path);\n    }\n\n    function onClick_resueme_close(){\n        setModal_resume(!modal_resume);\n        // let path = (game_state.isHard) ? \"/game/hard\" : \"/game/normal\";\n        // navigate(path);\n    }\n\n    function onClick_unable_change() {\n        setModal(!modal);\n    }\n\n    function onClick_back(){\n        setModal_back(!modal_back);\n    }\n\n    useEffect(()=>{\n        const DATA = window.localStorage.getItem('APP_LEFT_STATE');\n        console.log(game_state);\n        if(DATA !== null){\n            let tmp = JSON.parse(DATA);\n            if(tmp.guessed_list.length === 0 && tmp.temp_guess === \"\"){\n            //   localStorage.removeItem(\"APP_LEFT_STATE\")\n                if(tmp.isHard && tmp.isHard != game_state.isHard){\n                    dispatch({type:ACTION.LEVEL});\n                }\n            }else{\n              setModal_resume(!modal_resume);\n            }\n          }\n    },[])\n\n\n    window.onbeforeunload = ()=>{\n        // if leave or refresh save state;\n        // normal leave should not save state;\n        // after load the state, delete it!\n        window.localStorage.setItem(\"APP_LEFT_STATE\", JSON.stringify(game_state));\n    }\n\n\n    return (\n        <>\n        <header className=\"navbar\"> \n            <button className='button' onClick={onClick_back}> Back </button>\n            <div className='longer'>\n                <button className='button' onClick={onClick_rule}> Rule </button>\n            </div>\n            <div className=\"mode_title\">Hard mode:</div>\n                <label className=\"switch\">\n                    <input type=\"checkbox\" onClick={onClick_unable_change} \n                        checked={game_state.isHard} readOnly></input>\n                    <span className=\"slider round\"></span>\n                </label>\n        </header>\n        {modal && (\n                <div className=\"modal\">\n                <div onClick={onClick_unable_change} className=\"overlay\"></div>\n                <div className=\"modal-content\">\n                    <h2>Hello Wordler!</h2>\n                    <p>\n                        You can only change the level before game start!\n                    </p>\n                    <button className=\"close-modal\" onClick={onClick_unable_change}>\n                    CLOSE\n                    </button>\n                </div>\n                </div>\n            )}\n\n        {modal_back && (\n            <div className=\"modal\">\n                <div onClick={onClick_back} className=\"overlay\"></div>\n                <div className=\"modal-content\">\n                <h3>Are you sure you want to leave?</h3>\n                \n                <button className=\"exit-modal\" onClick={goback}>\n                    Yes\n                </button>\n                <button className=\"mid-modal\" onClick={back_save}>\n                    leave, but save\n                </button>\n                <button className=\"again-modal\" onClick={onClick_back}>\n                    Resume\n                </button>\n                </div>\n            </div>\n            )}\n\n        {modal_resume && (\n            <div className=\"modal\">\n                <div className=\"overlay\"></div>\n                <div className=\"modal-content\">\n                <h3>You have a lefte game, wish to Continue?</h3>\n                <button className=\"exit-modal\" onClick={onClick_resueme}>\n                    Yes\n                </button>\n                <button className=\"again-modal\" onClick={onClick_resueme_close}>\n                    No\n                </button>\n                </div>\n            </div>\n            )}\n\n\n        <div className='game_layout_hard'>\n            <GuessBoard />\n            <Keyboard />\n        </div>\n        </>\n    );\n}\n","/Users/jiawenhe/Desktop/project/wordle/src/Rule.jsx",["109","110","111"],[],"import {React, useContext} from \"react\";\nimport example_normal from \"./rules.png\";\nimport './Welcome.css';\nimport { useNavigate } from \"react-router-dom\";\nimport {gameContext} from \"./GameProvider\";\nimport example_hard from \"./rule_hard.png\";\n\n\nexport default function Rule(props){\n    const navigate = useNavigate();\n    const context = useContext(gameContext);\n\n    let game_state = context.game_state;\n    let rule_pic, letter_in, letter_on, letter_off;\n\n    if(game_state.isHard){\n        rule_pic = example_hard;\n        letter_on = \"V, I, L\"\n    }else{\n        rule_pic = example_normal;\n    }\n\n    function goback(){\n        navigate(-1);\n    }\n\n\n    return(\n        <>        \n            <header className=\"navbar\">\n                <button className=\"button_welcome\" onClick={goback}> Back </button>\n            </header>\n            <div className=\"rule_layout\">\n\n                <h1>How to Play</h1>\n                <div>Guess the Wordle in {game_state.chance} tries</div>\n                <li>Each guess must be a valid {game_state.letter_guess}-letter word.</li>\n                <li>The color of the tiles will change to show how close your guess was\n                    to the word.\n                </li>\n                <h3>Examples</h3>\n                <img src={rule_pic} alt=\"rule_example\" className=\"rule_eg\" />\n                <li> <span style={{color: '#13a653', fontWeight:'bold'}}>GREEN</span> means letter guessed is in the word and correct spot.</li>\n                <li><span style={{color: '#c6ad23', fontWeight:'bold'}}>YELLOW</span> means letter guessed is in the word but wrong spot.</li>\n                <li><span style={{color: '#070807', fontWeight:'bold'}}>BLACK</span> means letter guessed is not in the word in any spot.</li> \n            </div>\n        </>\n\n    )\n}","/Users/jiawenhe/Desktop/project/wordle/src/Keyboard.jsx",["112","113"],[],"/Users/jiawenhe/Desktop/project/wordle/src/GuessBoard.jsx",["114","115","116","117"],[],"import { React, useContext, useState, useEffect, useRef } from 'react';\nimport './game.css';\nimport { gameContext } from './GameProvider';\nimport './modal.css';\n\nexport default function GuessBoard(props) {\n  const context = useContext(gameContext);\n\n  let dispatch = context.dispatch;\n  let game_state = context.game_state;\n  \n\n  let answer = game_state.word;\n\n  let row = game_state.chance;\n  let col = game_state.letter_guess;\n  let guessed_list = game_state.guessed_list;\n  let guess = game_state.temp_guess;\n  let row_style, board_style;\n\n  if(game_state.isHard){\n    row_style = \"guess_row_hard\";\n    board_style = \"guess_board_hard\";\n  }else{\n    row_style = \"guess_row_normal\";\n    board_style = \"guess_board_normal\";\n  }\n\n  function check_correct(ans, gus){\n    let res = [];\n    const map = new Map();\n\n    for(let i = 0; i < col; i++){\n      map.set(ans[i], map.has(ans[i]) ? map.get(ans[i]) + 1 : 1);\n      if(ans[i].toLowerCase() === gus[i].toLowerCase()){\n        res[i] = \"guess right\";\n        map.set(ans[i], map.get(ans[i]) - 1);\n      }\n    }\n\n    for(let i = 0; i < col; i++){\n      if(res[i] === undefined){\n        if(map.has(gus[i]) && map.get(gus[i]) !== 0){\n          res[i] = 'guess well';\n        }else{\n          res[i] = 'guess wrong';\n        }\n      }\n    }\n    return res;\n  }\n\n  function create_guessboard(){\n    const guessboard = [];\n    let padding = true;\n    for(let i = 0; i < row; i++){\n        const guess_row = [];\n\n        let res = [];\n        if(guessed_list[i]){\n          res = check_correct(answer, guessed_list[i]);\n        }\n\n        for(let j = 0; j < col; j++){\n            if(guessed_list[i]){\n                let letter = guessed_list[i][j];                \n                guess_row.push(<div className={res[j]}>{letter}</div>);\n            }else if(guess[j] && padding){\n                guess_row.push(<div className='guess'>{guess[j]}</div>);\n                if(j === col - 1){\n                    padding = false;\n                }\n            }else{\n                padding = false;\n                guess_row.push(<div className='guess'></div>);\n            }\n\n        }\n        guessboard.push(<div className={row_style}>{guess_row}</div>);\n    }\n    return guessboard;\n  }\n\n  return(\n    <div className='guess_board_container'>\n        <div className={board_style}>\n            {create_guessboard()}\n        </div>\n    </div>\n\n  );\n}","/Users/jiawenhe/Desktop/project/wordle/src/WordList.js",[],[],{"ruleId":"118","severity":1,"message":"119","line":38,"column":9,"nodeType":"120","messageId":"121","endLine":38,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":14,"column":19,"nodeType":"120","messageId":"121","endLine":14,"endColumn":28},{"ruleId":"118","severity":1,"message":"123","line":14,"column":41,"nodeType":"120","messageId":"121","endLine":14,"endColumn":51},{"ruleId":"118","severity":1,"message":"124","line":18,"column":9,"nodeType":"120","messageId":"121","endLine":18,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":30,"column":5,"nodeType":"127","endLine":30,"endColumn":7,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":77,"column":45,"nodeType":"131","messageId":"132","endLine":77,"endColumn":47},{"ruleId":"125","severity":1,"message":"133","line":84,"column":7,"nodeType":"127","endLine":84,"endColumn":9,"suggestions":"134"},{"ruleId":"118","severity":1,"message":"135","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"136","line":1,"column":50,"nodeType":"120","messageId":"121","endLine":1,"endColumn":56},{"ruleId":"118","severity":1,"message":"137","line":1,"column":29,"nodeType":"120","messageId":"121","endLine":1,"endColumn":37},{"ruleId":"118","severity":1,"message":"135","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"136","line":1,"column":50,"nodeType":"120","messageId":"121","endLine":1,"endColumn":56},{"ruleId":"118","severity":1,"message":"138","line":9,"column":7,"nodeType":"120","messageId":"121","endLine":9,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":30,"column":5,"nodeType":"127","endLine":30,"endColumn":7,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"130","line":77,"column":45,"nodeType":"131","messageId":"132","endLine":77,"endColumn":47},{"ruleId":"125","severity":1,"message":"133","line":84,"column":7,"nodeType":"127","endLine":84,"endColumn":9,"suggestions":"140"},{"ruleId":"118","severity":1,"message":"122","line":14,"column":19,"nodeType":"120","messageId":"121","endLine":14,"endColumn":28},{"ruleId":"118","severity":1,"message":"123","line":14,"column":41,"nodeType":"120","messageId":"121","endLine":14,"endColumn":51},{"ruleId":"118","severity":1,"message":"124","line":18,"column":9,"nodeType":"120","messageId":"121","endLine":18,"endColumn":18},{"ruleId":"118","severity":1,"message":"135","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"136","line":1,"column":50,"nodeType":"120","messageId":"121","endLine":1,"endColumn":56},{"ruleId":"118","severity":1,"message":"137","line":1,"column":29,"nodeType":"120","messageId":"121","endLine":1,"endColumn":37},{"ruleId":"118","severity":1,"message":"135","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"136","line":1,"column":50,"nodeType":"120","messageId":"121","endLine":1,"endColumn":56},{"ruleId":"118","severity":1,"message":"138","line":9,"column":7,"nodeType":"120","messageId":"121","endLine":9,"endColumn":15},"no-unused-vars","'reader' is assigned a value but never used.","Identifier","unusedVar","'letter_in' is defined but never used.","'letter_off' is defined but never used.","'letter_on' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'modal_resume'. Either include it or remove the dependency array. You can also do a functional update 'setModal_resume(m => ...)' if you only need 'modal_resume' in the 'setModal_resume' call.","ArrayExpression",["141"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'ACTION.LEVEL', 'dispatch', 'game_state', and 'modal_resume'. Either include them or remove the dependency array. You can also do a functional update 'setModal_resume(m => ...)' if you only need 'modal_resume' in the 'setModal_resume' call.",["142"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'dispatch' is assigned a value but never used.",["143"],["144"],{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"145","fix":"149"},{"desc":"147","fix":"150"},"Update the dependencies array to be: [modal_resume]",{"range":"151","text":"152"},"Update the dependencies array to be: [ACTION.LEVEL, dispatch, game_state, modal_resume]",{"range":"153","text":"154"},{"range":"155","text":"152"},{"range":"156","text":"154"},[853,855],"[modal_resume]",[2530,2532],"[ACTION.LEVEL, dispatch, game_state, modal_resume]",[853,855],[2530,2532]]