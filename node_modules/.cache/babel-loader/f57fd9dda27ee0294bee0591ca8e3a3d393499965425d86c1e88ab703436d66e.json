{"ast":null,"code":"var _jsxFileName = \"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GuessBoard.jsx\",\n  _s = $RefreshSig$();\nimport { React, useContext, useState, useEffect, useRef } from 'react';\nimport './game.css';\nimport { gameContext } from './GameProvider';\nimport './modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GuessBoard(props) {\n  _s();\n  const context = useContext(gameContext);\n  let dispatch = context.dispatch;\n  let game_state = context.game_state;\n  let ACTION = context.ACTION;\n  let answer = game_state.word;\n  let index = game_state.curr_index;\n  let row = game_state.chance;\n  let col = game_state.letter_guess;\n  let guessed_list = game_state.guessed_list;\n  let guess = game_state.temp_guess;\n  let row_style, board_style;\n  if (game_state.isHard) {\n    row_style = \"guess_row_hard\";\n    board_style = \"guess_board_hard\";\n  } else {\n    row_style = \"guess_row_normal\";\n    board_style = \"guess_board_normal\";\n  }\n  function check_correct(ans, gus) {\n    let res = [];\n    for (let i = 0; i < col; i++) {\n      if (ans[i].toLowerCase() === gus[i].toLowerCase()) {\n        res[i] = \"guess right\";\n      }\n    }\n  }\n  function create_guessboard() {\n    const guessboard = [];\n    let padding = true;\n    for (let i = 0; i < row; i++) {\n      const guess_row = [];\n      for (let j = 0; j < col; j++) {\n        if (guessed_list[i]) {\n          let letter = guessed_list[i][j];\n          let check = 'guess wrong';\n          if (letter.toLowerCase() === answer[j].toLowerCase()) {\n            check = 'guess right';\n          } else if (answer.includes(letter.toLowerCase())) {\n            check = 'guess well';\n          }\n          guess_row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: check,\n            children: letter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this));\n        } else if (guess[j] && padding) {\n          guess_row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess\",\n            children: guess[j]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 32\n          }, this));\n          if (j === col - 1) {\n            padding = false;\n          }\n        } else {\n          padding = false;\n          guess_row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 32\n          }, this));\n        }\n      }\n      guessboard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: row_style,\n        children: guess_row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this));\n    }\n    return guessboard;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess_board_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: board_style,\n      children: create_guessboard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(GuessBoard, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c = GuessBoard;\nvar _c;\n$RefreshReg$(_c, \"GuessBoard\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useRef","gameContext","GuessBoard","props","context","dispatch","game_state","ACTION","answer","word","index","curr_index","row","chance","col","letter_guess","guessed_list","guess","temp_guess","row_style","board_style","isHard","check_correct","ans","gus","res","i","toLowerCase","create_guessboard","guessboard","padding","guess_row","j","letter","check","includes","push"],"sources":["/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GuessBoard.jsx"],"sourcesContent":["import { React, useContext, useState, useEffect, useRef } from 'react';\nimport './game.css';\nimport { gameContext } from './GameProvider';\nimport './modal.css';\n\nexport default function GuessBoard(props) {\n  const context = useContext(gameContext);\n\n  let dispatch = context.dispatch;\n  let game_state = context.game_state;\n  let ACTION = context.ACTION;\n  \n\n  let answer = game_state.word;\n  let index = game_state.curr_index;\n\n  let row = game_state.chance;\n  let col = game_state.letter_guess;\n  let guessed_list = game_state.guessed_list;\n  let guess = game_state.temp_guess;\n  let row_style, board_style;\n\n  if(game_state.isHard){\n    row_style = \"guess_row_hard\";\n    board_style = \"guess_board_hard\";\n  }else{\n    row_style = \"guess_row_normal\";\n    board_style = \"guess_board_normal\";\n  }\n\n  function check_correct(ans, gus){\n    let res = []\n    for(let i = 0; i < col; i++){\n      if(ans[i].toLowerCase() === gus[i].toLowerCase()){\n        res[i] = \"guess right\";\n      }\n      \n    }\n  }\n\n  function create_guessboard(){\n    const guessboard = [];\n    let padding = true;\n    for(let i = 0; i < row; i++){\n        const guess_row = [];\n        for(let j = 0; j < col; j++){\n            if(guessed_list[i]){\n                let letter = guessed_list[i][j];\n                let check = 'guess wrong';\n                if(letter.toLowerCase() === answer[j].toLowerCase()){\n                    check = 'guess right';\n                }else if(answer.includes(letter.toLowerCase())){\n                    check = 'guess well';\n                }\n                guess_row.push(<div className={check}>{letter}</div>);\n            }else if(guess[j] && padding){\n                guess_row.push(<div className='guess'>{guess[j]}</div>);\n                if(j === col - 1){\n                    padding = false;\n                }\n            }else{\n                padding = false;\n                guess_row.push(<div className='guess'></div>);\n            }\n\n        }\n        guessboard.push(<div className={row_style}>{guess_row}</div>);\n    }\n    return guessboard;\n  }\n\n  return(\n    <div className='guess_board_container'>\n        <div className={board_style}>\n            {create_guessboard()}\n        </div>\n    </div>\n\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}