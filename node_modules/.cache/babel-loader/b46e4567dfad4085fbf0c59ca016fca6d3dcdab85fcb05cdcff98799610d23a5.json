{"ast":null,"code":"var _jsxFileName = \"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const gameContext = /*#__PURE__*/createContext();\nexport function GameProvider(props) {\n  _s();\n  const ACTION = {\n    LEVEL: 'level',\n    APPEND: 'append',\n    DEL: 'delete',\n    ADD: 'add',\n    NORMAL: \"start\",\n    HARD: \"start_hard\",\n    RESET\n  };\n  const WORD_LIST = [\"abcdef\", 'abroad', 'answer', 'Choose', 'Attend', 'Chance', 'August', 'Advice', 'Almost', 'Answer', 'Behind', 'Desert', 'Appeal'];\n  const WORD_LIST_HARD = [\"abcdef\", 'abroad', 'answer', 'Choose', 'Attend', 'Chance', 'August', 'Advice', 'Almost', 'Answer', 'Behind', 'Desert', 'Appeal'];\n  function game_state_reducer(state, action) {\n    switch (action.type) {\n      case 'level':\n        return {\n          ...state,\n          isHard: !state.isHard,\n          chance: state.isHard ? 6 : 5,\n          letter_guess: state.isHard ? 6 : 7\n        };\n      case 'append':\n        console.log(state.temp_guess);\n        return {\n          ...state,\n          temp_guess: state.curr_index === state.letter_guess ? state.temp_guess : state.temp_guess.concat(action.payload),\n          curr_index: state.curr_index === state.letter_guess ? state.curr_index : state.curr_index + 1\n        };\n      case 'delete':\n        return {\n          ...state,\n          temp_guess: state.temp_guess.slice(0, -1),\n          curr_index: state.curr_index === 0 ? 0 : state.curr_index - 1\n        };\n      case \"add\":\n        console.log(\"before push\", state.guessed_list);\n        let tmp = state.guessed_list;\n        tmp.push(action.payload);\n        console.log(\"after push\", state.guessed_list);\n        return {\n          ...state,\n          guessed_list: tmp,\n          curr_index: 0,\n          temp_guess: ''\n        };\n      case \"start\":\n        return {\n          ...state,\n          word: WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)]\n        };\n      case \"start_hard\":\n        return {\n          ...state,\n          word: WORD_LIST_HARD[Math.floor(Math.random() * WORD_LIST_HARD.length)]\n        };\n      case \"reset\":\n        return initialState;\n      default:\n        return state;\n    }\n  }\n  const initialState = {\n    isHard: false,\n    chance: 6,\n    letter_guess: 6,\n    temp_guess: \"\",\n    guessed_list: [],\n    word: \"\",\n    curr_index: 0\n  };\n  const [game_state, dispatch] = useReducer(game_state_reducer, initialState);\n  console.log(game_state.guessed_list);\n  const LIST = game_state.isHard ? WORD_LIST_HARD : WORD_LIST;\n  return /*#__PURE__*/_jsxDEV(gameContext.Provider, {\n    value: {\n      game_state,\n      dispatch,\n      ACTION,\n      LIST\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(GameProvider, \"MBHgarrA4ANTDhxC6TOxD3hSnYA=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","useEffect","useReducer","createContext","gameContext","GameProvider","props","ACTION","LEVEL","APPEND","DEL","ADD","NORMAL","HARD","RESET","WORD_LIST","WORD_LIST_HARD","game_state_reducer","state","action","type","isHard","chance","letter_guess","console","log","temp_guess","curr_index","concat","payload","slice","guessed_list","tmp","push","word","Math","floor","random","length","initialState","game_state","dispatch","LIST","children"],"sources":["/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\n\nexport const gameContext = createContext();\n\nexport function GameProvider(props){\n\n    const ACTION = {\n        LEVEL: 'level',\n        APPEND: 'append',\n        DEL: 'delete',\n        ADD: 'add',\n        NORMAL: \"start\",\n        HARD: \"start_hard\",\n        RESET\n    }\n\n    const WORD_LIST = [\"abcdef\",'abroad','answer','Choose','Attend','Chance','August',\n    'Advice','Almost','Answer','Behind','Desert','Appeal'];\n\n    const WORD_LIST_HARD = [\"abcdef\",'abroad','answer','Choose','Attend','Chance','August',\n    'Advice','Almost','Answer','Behind','Desert','Appeal'];\n  \n\n    function game_state_reducer(state, action){\n        switch(action.type){\n            case 'level':\n                return {...state,\n                    isHard: !state.isHard,\n                    chance: state.isHard ? 6 : 5, \n                    letter_guess: state.isHard ? 6 : 7};\n            case 'append':\n                console.log(state.temp_guess);\n                return{...state,\n                temp_guess: (state.curr_index === state.letter_guess)? state.temp_guess : state.temp_guess.concat(action.payload),\n                curr_index: (state.curr_index === state.letter_guess)? state.curr_index: state.curr_index + 1};\n            case 'delete':\n                return {...state,\n                    temp_guess: state.temp_guess.slice(0,-1),\n                    curr_index: (state.curr_index === 0) ? 0: state.curr_index -1\n                };\n            case \"add\":\n                console.log(\"before push\", state.guessed_list);\n                let tmp = state.guessed_list;\n                tmp.push(action.payload);\n                console.log(\"after push\", state.guessed_list);\n                return{...state,\n                    guessed_list: tmp,\n                    curr_index: 0,\n                    temp_guess: ''\n                };\n            case \"start\":\n                return{...state,\n                word: WORD_LIST[Math.floor(Math.random()* WORD_LIST.length)]};\n            case \"start_hard\":\n                return{...state,\n                    word: WORD_LIST_HARD[Math.floor(Math.random()* WORD_LIST_HARD.length)]};\n            case \"reset\":\n                return initialState;\n            default:\n                return state;\n        }\n    }\n    const initialState = {\n        isHard: false, chance: 6,\n        letter_guess: 6,\n        temp_guess: \"\",\n        guessed_list:[],\n        word: \"\",\n        curr_index: 0\n    }\n    const[game_state, dispatch] = useReducer(game_state_reducer, initialState);\n\n    console.log(game_state.guessed_list);\n    const LIST = game_state.isHard ? WORD_LIST_HARD: WORD_LIST;\n\n\n    return(\n        <gameContext.Provider value={{game_state, dispatch, ACTION, LIST}}>\n            {props.children}\n        </gameContext.Provider>\n    )\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}