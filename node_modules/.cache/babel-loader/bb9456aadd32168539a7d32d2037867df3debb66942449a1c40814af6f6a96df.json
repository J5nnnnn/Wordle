{"ast":null,"code":"var _jsxFileName = \"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const gameContext = /*#__PURE__*/createContext();\nexport function GameProvider(props) {\n  _s();\n  const ACTION = {\n    LEVEL: 'level',\n    APPEND: 'append',\n    DEL: 'delete',\n    ADD: 'add',\n    RESET: 'reset',\n    RESTART: 'restart',\n    RESUME: 'resume',\n    HARD: 'hard'\n  };\n  const WORD_LIST = [\"abcdef\", 'abroad', 'answer', 'Choose', 'Attend', 'Chance', 'August', 'Advice', 'Almost', 'Answer', 'Behind', 'Desert', 'Appeal'];\n  const WORD_LIST_HARD = [\"Visible\", \"Vehicle\"];\n  fetch('/sample.txt').then(r => r.text()).then(text => {\n    this.setState({\n      arr1: text\n    }, () => console.log(this.state.arr1));\n  }).catch(error => {\n    // Maybe present some error/failure UI to the user here\n  });\n  function game_state_reducer(state, action) {\n    switch (action.type) {\n      case 'level':\n        return {\n          ...initialState,\n          isHard: !state.isHard,\n          chance: state.isHard ? 6 : 5,\n          letter_guess: state.isHard ? 6 : 7,\n          word: state.isHard ? WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)] : WORD_LIST_HARD[Math.floor(Math.random() * WORD_LIST_HARD.length)]\n        };\n      case 'append':\n        console.log(state.temp_guess);\n        return {\n          ...state,\n          temp_guess: state.curr_index === state.letter_guess ? state.temp_guess : state.temp_guess.concat(action.payload),\n          curr_index: state.curr_index === state.letter_guess ? state.curr_index : state.curr_index + 1\n        };\n      case 'delete':\n        return {\n          ...state,\n          temp_guess: state.temp_guess.slice(0, -1),\n          curr_index: state.curr_index === 0 ? 0 : state.curr_index - 1\n        };\n      case \"add\":\n        console.log(\"before push\", state.guessed_list);\n        let tmp = state.guessed_list;\n        tmp.push(action.payload);\n        console.log(\"after push\", state.guessed_list);\n        return {\n          ...state,\n          guessed_list: tmp,\n          curr_index: 0,\n          temp_guess: ''\n        };\n      case \"reset\":\n        // will unmounting\n        return {\n          ...initialState\n        };\n      case \"restart\":\n        // no unmounting\n        return {\n          ...initialState,\n          isHard: state.isHard,\n          chance: state.chance,\n          letter_guess: state.letter_guess,\n          word: state.isHard ? WORD_LIST_HARD[Math.floor(Math.random() * WORD_LIST_HARD.length)] : WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)]\n        };\n      case \"resume\":\n        return {\n          ...action.payload\n        };\n      case \"hard\":\n        return {};\n      default:\n        return state;\n    }\n  }\n  const initialState = {\n    isHard: false,\n    chance: 6,\n    letter_guess: 6,\n    temp_guess: \"\",\n    guessed_list: [],\n    word: WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)],\n    curr_index: 0\n  };\n  const [game_state, dispatch] = useReducer(game_state_reducer, initialState);\n  const LIST = game_state.isHard ? WORD_LIST_HARD : WORD_LIST;\n  console.log(game_state.word);\n  return /*#__PURE__*/_jsxDEV(gameContext.Provider, {\n    value: {\n      game_state,\n      dispatch,\n      ACTION,\n      LIST\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(GameProvider, \"MBHgarrA4ANTDhxC6TOxD3hSnYA=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","useEffect","useReducer","createContext","gameContext","GameProvider","props","ACTION","LEVEL","APPEND","DEL","ADD","RESET","RESTART","RESUME","HARD","WORD_LIST","WORD_LIST_HARD","fetch","then","r","text","setState","arr1","console","log","state","catch","error","game_state_reducer","action","type","initialState","isHard","chance","letter_guess","word","Math","floor","random","length","temp_guess","curr_index","concat","payload","slice","guessed_list","tmp","push","game_state","dispatch","LIST","children"],"sources":["/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useReducer } from \"react\";\nimport { createContext } from \"react\";\n\nexport const gameContext = createContext();\n\nexport function GameProvider(props){\n\n    const ACTION = {\n        LEVEL: 'level',\n        APPEND: 'append',\n        DEL: 'delete',\n        ADD: 'add',\n        RESET: 'reset',\n        RESTART: 'restart',\n        RESUME: 'resume',\n        HARD: 'hard'\n    }\n\n    const WORD_LIST = [\"abcdef\",'abroad','answer','Choose','Attend','Chance','August',\n    'Advice','Almost','Answer','Behind','Desert','Appeal'];\n\n    const WORD_LIST_HARD = [\"Visible\",\"Vehicle\"];\n\n    fetch('/sample.txt')\n    .then((r) => r.text())\n    .then(text  => {\n      this.setState({\n      arr1: text\n    },()=>console.log(this.state.arr1))\n    }).catch(error => {\n      // Maybe present some error/failure UI to the user here\n    });\n\n\n\n\n    function game_state_reducer(state, action){\n        switch(action.type){\n            case 'level':\n                return {...initialState,\n                    isHard: !state.isHard,\n                    chance: state.isHard ? 6 : 5, \n                    letter_guess: state.isHard ? 6 : 7,\n                    word: state.isHard? WORD_LIST[Math.floor(Math.random()* WORD_LIST.length)]:\n                    WORD_LIST_HARD[Math.floor(Math.random()* WORD_LIST_HARD.length)]\n                };\n            case 'append':\n                console.log(state.temp_guess);\n                return{...state,\n                temp_guess: (state.curr_index === state.letter_guess)? state.temp_guess : state.temp_guess.concat(action.payload),\n                curr_index: (state.curr_index === state.letter_guess)? state.curr_index: state.curr_index + 1};\n            case 'delete':\n                return {...state,\n                    temp_guess: state.temp_guess.slice(0,-1),\n                    curr_index: (state.curr_index === 0) ? 0: state.curr_index -1\n                };\n            case \"add\":\n                console.log(\"before push\", state.guessed_list);\n                let tmp = state.guessed_list;\n                tmp.push(action.payload);\n                console.log(\"after push\", state.guessed_list);\n                return{...state,\n                    guessed_list: tmp,\n                    curr_index: 0,\n                    temp_guess: ''\n                };\n            case \"reset\":\n                // will unmounting\n                return {...initialState,\n                };\n            case \"restart\":\n                // no unmounting\n                return{...initialState,\n                    isHard: state.isHard,\n                    chance: state.chance,\n                    letter_guess: state.letter_guess,\n                    word: state.isHard? WORD_LIST_HARD[Math.floor(Math.random()* WORD_LIST_HARD.length)]:\n                        WORD_LIST[Math.floor(Math.random()* WORD_LIST.length)]\n                };\n            case \"resume\":\n                return{\n                    ...action.payload,\n                }\n            case \"hard\":\n                return{\n                    \n                }\n            default:\n                return state;\n        }\n    }\n\n\n    const initialState = {\n        isHard: false,\n        chance: 6,\n        letter_guess: 6,\n        temp_guess: \"\",\n        guessed_list:[],\n        word: WORD_LIST[Math.floor(Math.random()* WORD_LIST.length)],\n        curr_index: 0,\n    }\n\n    const[game_state, dispatch] = useReducer(game_state_reducer, initialState);\n    \n\n    const LIST = game_state.isHard ? WORD_LIST_HARD: WORD_LIST;\n\n    console.log(game_state.word);\n    return(\n        <gameContext.Provider value={{game_state, dispatch, ACTION, LIST}}>\n            {props.children}\n        </gameContext.Provider>\n    )\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}