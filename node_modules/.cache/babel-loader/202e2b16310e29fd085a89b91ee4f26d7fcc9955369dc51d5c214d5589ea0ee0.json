{"ast":null,"code":"var _jsxFileName = \"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Rule.jsx\",\n  _s = $RefreshSig$();\nimport { React, useContext } from \"react\";\nimport example_normal from \"./rules.png\";\nimport './Welcome.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { gameContext } from \"./GameProvider\";\nimport example_hard from \"./rule_hard.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Rule(props) {\n  _s();\n  const navigate = useNavigate();\n  const context = useContext(gameContext);\n  let game_state = context.game_state;\n  let rule_pic, letter_in, letter_on, letter_off;\n  if (game_state.isHard) {\n    rule_pic = example_hard;\n    letter_on = \"V, I, L\";\n  } else {\n    rule_pic = example_normal;\n  }\n  function goback() {\n    navigate(-1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button_welcome\",\n        onClick: goback,\n        children: \" Back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rule_layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Guess the Wordle in \", game_state.chance, \" tries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Each guess must be a valid \", game_state.letter_guess, \"-letter word.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The color of the tiles will change to show how close your guess was to the word.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Examples\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: rule_pic,\n        alt: \"rule_example\",\n        className: \"rule_eg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Green means letter guessed is in the word and correct spot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Yellow means letter guessed is in the word but wrong spot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"letter guessed isnot in the word in any spot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Rule, \"GFuGT8QJ/8zexYAd3Rp1r38EPrs=\", false, function () {\n  return [useNavigate];\n});\n_c = Rule;\nvar _c;\n$RefreshReg$(_c, \"Rule\");","map":{"version":3,"names":["React","useContext","example_normal","useNavigate","gameContext","example_hard","Rule","props","navigate","context","game_state","rule_pic","letter_in","letter_on","letter_off","isHard","goback","chance","letter_guess"],"sources":["/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/Rule.jsx"],"sourcesContent":["import {React, useContext} from \"react\";\nimport example_normal from \"./rules.png\";\nimport './Welcome.css';\nimport { useNavigate } from \"react-router-dom\";\nimport {gameContext} from \"./GameProvider\";\nimport example_hard from \"./rule_hard.png\";\n\n\nexport default function Rule(props){\n    const navigate = useNavigate();\n    const context = useContext(gameContext);\n\n    let game_state = context.game_state;\n    let rule_pic, letter_in, letter_on, letter_off;\n\n    if(game_state.isHard){\n        rule_pic = example_hard;\n        letter_on = \"V, I, L\"\n    }else{\n        rule_pic = example_normal;\n    }\n\n    function goback(){\n        navigate(-1);\n    }\n\n\n    return(\n        <>        \n            <header className=\"navbar\">\n                <button className=\"button_welcome\" onClick={goback}> Back </button>\n            </header>\n            <div className=\"rule_layout\">\n\n                <h1>How to Play</h1>\n                <div>Guess the Wordle in {game_state.chance} tries</div>\n                <li>Each guess must be a valid {game_state.letter_guess}-letter word.</li>\n                <li>The color of the tiles will change to show how close your guess was\n                    to the word.\n                </li>\n                <h3>Examples</h3>\n                <img src={rule_pic} alt=\"rule_example\" className=\"rule_eg\" />\n                <li>Green means letter guessed is in the word and correct spot.</li>\n                <li>Yellow means letter guessed is in the word but wrong spot.</li>\n                <li>letter guessed isnot in the word in any spot.</li> \n            </div>\n        </>\n\n    )\n}"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,UAAU,QAAO,OAAO;AACvC,OAAOC,cAAc,MAAM,aAAa;AACxC,OAAO,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,OAAOC,YAAY,MAAM,iBAAiB;AAAC;AAAA;AAG3C,eAAe,SAASC,IAAI,CAACC,KAAK,EAAC;EAAA;EAC/B,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,OAAO,GAAGR,UAAU,CAACG,WAAW,CAAC;EAEvC,IAAIM,UAAU,GAAGD,OAAO,CAACC,UAAU;EACnC,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU;EAE9C,IAAGJ,UAAU,CAACK,MAAM,EAAC;IACjBJ,QAAQ,GAAGN,YAAY;IACvBQ,SAAS,GAAG,SAAS;EACzB,CAAC,MAAI;IACDF,QAAQ,GAAGT,cAAc;EAC7B;EAEA,SAASc,MAAM,GAAE;IACbR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChB;EAGA,oBACI;IAAA,wBACI;MAAQ,SAAS,EAAC,QAAQ;MAAA,uBACtB;QAAQ,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAEQ,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA,QAC9D,eACT;MAAK,SAAS,EAAC,aAAa;MAAA,wBAExB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA,mCAA0BN,UAAU,CAACO,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACxD;QAAA,0CAAgCP,UAAU,CAACQ,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eAC1E;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEK,eACL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAK,GAAG,EAAEP,QAAS;QAAC,GAAG,EAAC,cAAc;QAAC,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoE,eACpE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmE,eACnE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsD;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD;EAAA,gBACP;AAGX;AAAC,GAzCuBL,IAAI;EAAA,QACPH,WAAW;AAAA;AAAA,KADRG,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}