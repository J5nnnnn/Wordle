{"ast":null,"code":"var _jsxFileName = \"/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useReducer } from 'react';\nimport { createContext } from 'react';\nimport test from \"./WordList.txt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const gameContext = /*#__PURE__*/createContext();\nexport function GameProvider(props) {\n  _s();\n  const ACTION = {\n    LEVEL: 'level',\n    APPEND: 'append',\n    DEL: 'delete',\n    ADD: 'add',\n    RESET: 'reset',\n    RESTART: 'restart',\n    RESUME: 'resume',\n    HARD: 'hard'\n  };\n  const WORD_LIST = ['abcdef', 'abroad', 'answer', 'Choose', 'Attend', 'Chance', 'August', 'Advice', 'Almost', 'Answer', 'Behind', 'Desert', 'Appeal'];\n  const WORD_LIST_HARD = ['Visible', 'Vehicle'];\n  const reader = new FileReader();\n  reader.readAsText(fetch(test));\n\n  //   fetch('WordList.txt').then(r=> r.text()).then(text => console.log(text))\n\n  console.log(fetch(test));\n  function game_state_reducer(state, action) {\n    switch (action.type) {\n      case 'level':\n        return {\n          ...initialState,\n          isHard: !state.isHard,\n          chance: state.isHard ? 6 : 5,\n          letter_guess: state.isHard ? 6 : 7,\n          word: state.isHard ? WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)] : WORD_LIST_HARD[Math.floor(Math.random() * WORD_LIST_HARD.length)]\n        };\n      case 'append':\n        console.log(state.temp_guess);\n        return {\n          ...state,\n          temp_guess: state.curr_index === state.letter_guess ? state.temp_guess : state.temp_guess.concat(action.payload),\n          curr_index: state.curr_index === state.letter_guess ? state.curr_index : state.curr_index + 1\n        };\n      case 'delete':\n        return {\n          ...state,\n          temp_guess: state.temp_guess.slice(0, -1),\n          curr_index: state.curr_index === 0 ? 0 : state.curr_index - 1\n        };\n      case 'add':\n        console.log('before push', state.guessed_list);\n        let tmp = state.guessed_list;\n        tmp.push(action.payload);\n        console.log('after push', state.guessed_list);\n        return {\n          ...state,\n          guessed_list: tmp,\n          curr_index: 0,\n          temp_guess: ''\n        };\n      case 'reset':\n        // will unmounting\n        return {\n          ...initialState\n        };\n      case 'restart':\n        // no unmounting\n        return {\n          ...initialState,\n          isHard: state.isHard,\n          chance: state.chance,\n          letter_guess: state.letter_guess,\n          word: state.isHard ? WORD_LIST_HARD[Math.floor(Math.random() * WORD_LIST_HARD.length)] : WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)]\n        };\n      case 'resume':\n        return {\n          ...action.payload\n        };\n      case 'hard':\n        return {};\n      default:\n        return state;\n    }\n  }\n  const initialState = {\n    isHard: false,\n    chance: 6,\n    letter_guess: 6,\n    temp_guess: '',\n    guessed_list: [],\n    word: WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)],\n    curr_index: 0\n  };\n  const [game_state, dispatch] = useReducer(game_state_reducer, initialState);\n  const LIST = game_state.isHard ? WORD_LIST_HARD : WORD_LIST;\n  console.log(game_state.word);\n  return /*#__PURE__*/_jsxDEV(gameContext.Provider, {\n    value: {\n      game_state,\n      dispatch,\n      ACTION,\n      LIST\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"MBHgarrA4ANTDhxC6TOxD3hSnYA=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","useReducer","createContext","test","gameContext","GameProvider","props","ACTION","LEVEL","APPEND","DEL","ADD","RESET","RESTART","RESUME","HARD","WORD_LIST","WORD_LIST_HARD","reader","FileReader","readAsText","fetch","console","log","game_state_reducer","state","action","type","initialState","isHard","chance","letter_guess","word","Math","floor","random","length","temp_guess","curr_index","concat","payload","slice","guessed_list","tmp","push","game_state","dispatch","LIST","children"],"sources":["/Users/jiawenhe/Desktop/22 Fall/CS5610/jiawen_he_project2/src/GameProvider.jsx"],"sourcesContent":["import React from 'react';\nimport { useReducer } from 'react';\nimport { createContext } from 'react';\nimport test from \"./WordList.txt\";\n\nexport const gameContext = createContext();\n\nexport function GameProvider(props) {\n  const ACTION = {\n    LEVEL: 'level',\n    APPEND: 'append',\n    DEL: 'delete',\n    ADD: 'add',\n    RESET: 'reset',\n    RESTART: 'restart',\n    RESUME: 'resume',\n    HARD: 'hard',\n  };\n\n  const WORD_LIST = [\n    'abcdef',\n    'abroad',\n    'answer',\n    'Choose',\n    'Attend',\n    'Chance',\n    'August',\n    'Advice',\n    'Almost',\n    'Answer',\n    'Behind',\n    'Desert',\n    'Appeal',\n  ];\n\n  const WORD_LIST_HARD = ['Visible', 'Vehicle'];\n\n  const reader = new FileReader();\n  reader.readAsText(fetch(test));\n\n//   fetch('WordList.txt').then(r=> r.text()).then(text => console.log(text))\n\n  console.log(fetch(test));\n\n  function game_state_reducer(state, action) {\n    switch (action.type) {\n      case 'level':\n        return {\n          ...initialState,\n          isHard: !state.isHard,\n          chance: state.isHard ? 6 : 5,\n          letter_guess: state.isHard ? 6 : 7,\n          word: state.isHard\n            ? WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)]\n            : WORD_LIST_HARD[Math.floor(Math.random() * WORD_LIST_HARD.length)],\n        };\n      case 'append':\n        console.log(state.temp_guess);\n        return {\n          ...state,\n          temp_guess:\n            state.curr_index === state.letter_guess\n              ? state.temp_guess\n              : state.temp_guess.concat(action.payload),\n          curr_index:\n            state.curr_index === state.letter_guess\n              ? state.curr_index\n              : state.curr_index + 1,\n        };\n      case 'delete':\n        return {\n          ...state,\n          temp_guess: state.temp_guess.slice(0, -1),\n          curr_index: state.curr_index === 0 ? 0 : state.curr_index - 1,\n        };\n      case 'add':\n        console.log('before push', state.guessed_list);\n        let tmp = state.guessed_list;\n        tmp.push(action.payload);\n        console.log('after push', state.guessed_list);\n        return { ...state, guessed_list: tmp, curr_index: 0, temp_guess: '' };\n      case 'reset':\n        // will unmounting\n        return { ...initialState };\n      case 'restart':\n        // no unmounting\n        return {\n          ...initialState,\n          isHard: state.isHard,\n          chance: state.chance,\n          letter_guess: state.letter_guess,\n          word: state.isHard\n            ? WORD_LIST_HARD[Math.floor(Math.random() * WORD_LIST_HARD.length)]\n            : WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)],\n        };\n      case 'resume':\n        return {\n          ...action.payload,\n        };\n      case 'hard':\n        return {};\n      default:\n        return state;\n    }\n  }\n\n  const initialState = {\n    isHard: false,\n    chance: 6,\n    letter_guess: 6,\n    temp_guess: '',\n    guessed_list: [],\n    word: WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)],\n    curr_index: 0,\n  };\n\n  const [game_state, dispatch] = useReducer(game_state_reducer, initialState);\n\n  const LIST = game_state.isHard ? WORD_LIST_HARD : WORD_LIST;\n\n  console.log(game_state.word);\n  return (\n    <gameContext.Provider value={{ game_state, dispatch, ACTION, LIST }}>\n      {props.children}\n    </gameContext.Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}